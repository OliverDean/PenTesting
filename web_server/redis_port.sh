#!/bin/bash

# Define the Redis configuration file path
REDIS_CONF="/etc/redis/redis.conf"

# Check if Redis server is installed
if ! dpkg -s redis-server >/dev/null 2>&1; then
    echo "Installing Redis server..."
    sudo apt-get update
    sudo apt-get install -y redis-server
else
    echo "Redis server is already installed."
fi

# Backup the original configuration file
if [ ! -f "${REDIS_CONF}.bak" ]; then
    echo "Backing up the original redis.conf to redis.conf.bak"
    sudo cp "$REDIS_CONF" "${REDIS_CONF}.bak"
fi

# Generate a random port between 1024 and 65535
RANDOM_PORT=$((1024 + RANDOM % 64512))
echo "Setting Redis to use random port: $RANDOM_PORT"

# Check if the port is already set in the configuration, and replace it with the desired random port
if grep -q '^port ' "$REDIS_CONF"; then
    echo "Port setting found, replacing with random port $RANDOM_PORT"
    sudo sed -i "s/^port .*/port $RANDOM_PORT/" "$REDIS_CONF"
else
    echo "Port setting not found, adding new port setting."
    echo "port $RANDOM_PORT" | sudo tee -a "$REDIS_CONF" > /dev/null
fi

# Check if the bind directive is already set in the configuration, and replace it with the desired values
if grep -q '^bind ' "$REDIS_CONF"; then
    echo "Bind setting found, replacing with 0.0.0.0 ::0"
    sudo sed -i "s/^bind .*/bind 0.0.0.0 ::0/" "$REDIS_CONF"
else
    echo "Bind setting not found, adding new bind setting."
    echo "bind 0.0.0.0 ::0" | sudo tee -a "$REDIS_CONF" > /dev/null
fi

# Disable protected mode for Redis
if grep -q '^protected-mode ' "$REDIS_CONF"; then
    echo "Protected mode found, disabling it."
    sudo sed -i 's/^protected-mode .*/protected-mode no/' "$REDIS_CONF"
else
    echo "Protected mode setting not found, adding it."
    echo "protected-mode no" | sudo tee -a "$REDIS_CONF" > /dev/null
fi

# Obfuscate common Redis commands by renaming them
echo "Renaming basic Redis commands to obfuscated names..."
sudo sed -i 's/^# rename-command GET ""/rename-command GET hiddenGET/' "$REDIS_CONF"
sudo sed -i 's/^# rename-command SET ""/rename-command SET hiddenSET/' "$REDIS_CONF"
sudo sed -i 's/^# rename-command KEYS ""/rename-command KEYS hiddenKEYS/' "$REDIS_CONF"
sudo sed -i 's/^# rename-command DEL ""/rename-command DEL hiddenDEL/' "$REDIS_CONF"
sudo sed -i 's/^# rename-command PING ""/rename-command PING hiddenPING/' "$REDIS_CONF"
sudo sed -i 's/^# rename-command FLUSHALL ""/rename-command FLUSHALL hiddenFLUSHALL/' "$REDIS_CONF"
sudo sed -i 's/^# rename-command SHUTDOWN ""/rename-command SHUTDOWN hiddenSHUTDOWN/' "$REDIS_CONF"
sudo sed -i 's/^# rename-command CONFIG ""/rename-command CONFIG hiddenCONFIG/' "$REDIS_CONF"

# Configure UFW to allow traffic only on the random Redis port
echo "Configuring UFW to allow traffic on random Redis port ($RANDOM_PORT)..."
sudo ufw allow $RANDOM_PORT/tcp

# Reload UFW to apply the new rule
sudo ufw reload

# Restart the Redis service to apply all changes
echo "Restarting Redis service..."
sudo systemctl restart redis-server

# Enable Redis service to start on boot
sudo systemctl enable redis-server

# Populate Redis with sensitive data
echo "Populating Redis with sensitive data..."
redis-cli -p $RANDOM_PORT <<EOF
SET secret_key "FLAG{Redis_Unauthenticated_Access}"
SET user:1 "admin"
SET password:1 "SuperSecretPassword"
EOF

echo "Sensitive data inserted into Redis."

# Check Redis is running on the random port
echo "Verifying Redis is running on port $RANDOM_PORT..."
sudo netstat -tunlp | grep redis

echo "Exposed Redis service setup complete with random port $RANDOM_PORT and obfuscated commands."
parallels@ubuntu-linux-2404:~/PenTest$ 

